{"version":3,"file":"commons.umd.js","sources":["../src/Logger.ts","../src/Config.ts","../src/WebSocketClient.ts","../src/JsonRpcProtocol.ts","../src/JsonRpcWebSocketClient.ts","../src/Aria2Client.ts","../src/DynamicInjector.ts","../src/VueAppLoader.ts"],"sourcesContent":["export default class Logger {\r\n    name: string = \"ROOT\";\r\n\r\n    constructor(name?: string) {\r\n        if (name != null) {\r\n            this.name = name;\r\n        }\r\n    }\r\n\r\n    debug(msg: any, ...params: any[]) {\r\n        this.print(console.debug, \"DEBUG\", msg, ...params);\r\n    }\r\n\r\n    info(msg: any, ...params: any[]) {\r\n        this.print(console.info, \"INFO\", msg, ...params);\r\n    }\r\n\r\n    trace(msg: any, ...params: any[]) {\r\n        this.print(console.trace, \"TRACE\", msg, ...params);\r\n    }\r\n\r\n    warn(msg: any, ...params: any[]) {\r\n        this.print(console.warn, \"WARN\", msg, ...params);\r\n    }\r\n\r\n    error(msg: any, ...params: any[]) {\r\n        this.print(console.error, \"ERROR\", msg, ...params);\r\n    }\r\n\r\n    print(logFunc: any, level: string, msg: any, ...params: any[]) {\r\n        let now = new Date();\r\n        let format = `${now.toJSON()} [${level}] [${this.name}] ${msg} `;\r\n        if (params != null && params.length > 0) {\r\n            logFunc(format, ...params);\r\n        }\r\n        else {\r\n            logFunc(format)\r\n        }\r\n    }\r\n}","import Logger from \"./Logger\";\r\n\r\nexport default class Config {\r\n    logger: Logger;\r\n    useLocalStorage: boolean;\r\n\r\n    constructor(useLocalStorage: boolean = false) {\r\n        this.logger = new Logger(\"config\");\r\n        this.useLocalStorage = useLocalStorage;\r\n    }\r\n\r\n    // #region 同步API\r\n    /**\r\n     * 获取所有配置项名称\r\n     * @returns 配置项名称数组\r\n     */\r\n    listValues() : string[] {\r\n        if (this.useLocalStorage) {\r\n            let keys: string[] = [];\r\n            for (let i = 0; i < localStorage.length; i++) {\r\n                let key = localStorage.key(i);\r\n                if (key != null) {\r\n                    keys.push(key);\r\n                }\r\n            }\r\n            return keys;\r\n        }\r\n\r\n        let keys = GM_listValues();\r\n        this.logger.debug(\"获取所有配置项名称: \", keys);\r\n        return keys;\r\n    }\r\n\r\n    /**\r\n     * 根据名称获取配置项的值\r\n     * @param key 配置项名称\r\n     * @param defaultValue 默认值\r\n     * @returns 配置项的值\r\n     */\r\n    getValue<V>(key: string, defaultValue?: V) : V {\r\n        if (this.useLocalStorage) {\r\n            let json = localStorage.getItem(key);\r\n            if (json == null) {\r\n                return defaultValue!;\r\n            }\r\n            return JSON.parse(json) as V;\r\n        }\r\n\r\n        let v = GM_getValue<V>(key, defaultValue);\r\n        this.logger.debug(\"获取配置项%s，结果: \", key, v);\r\n        return v;\r\n    }\r\n\r\n    /**\r\n     * 设置配置项\r\n     * @param key 配置项名称\r\n     * @param value 配置项值\r\n     */\r\n    setValue(key: string, value: any) : void {\r\n        if (this.useLocalStorage) {\r\n            let json = JSON.stringify(value);\r\n            localStorage.setItem(key, json);\r\n            return;\r\n        }\r\n\r\n        this.logger.debug(\"设置配置项%s设置为: \", key, value);\r\n        GM_setValue(key, value);\r\n    }\r\n\r\n    /**\r\n     * 当找不到配置项时初始化\r\n     * @param key 配置项名称\r\n     * @param initValue 初始值\r\n     */\r\n    initValueIfNotExists(key: string, initValue: any) : void {\r\n        let v: any | null = this.getValue(key, null);\r\n        if (v == null) {\r\n            this.logger.debug(\"配置项%s不存在，初始化为: \", key, initValue);\r\n            this.setValue(key, initValue);\r\n        }\r\n        else {\r\n            this.logger.debug(\"配置项%s已存在，值为: \", key, v);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 删除配置项\r\n     * @param key 配置项名称\r\n     */\r\n    deleteValue(key: string) : void {\r\n        if (this.useLocalStorage) {\r\n            localStorage.removeItem(key);\r\n            return;\r\n        }\r\n\r\n        this.logger.debug(\"删除配置项%s\", key);\r\n        GM_deleteValue(key);\r\n    }\r\n    // #endregion\r\n\r\n    // #region 异步API\r\n    /**\r\n     * 获取所有配置项名称（异步）\r\n     * @returns 配置项名称数组\r\n     */\r\n    listValuesAsync() : Promise<string[]> {\r\n        return GM.listValues();\r\n    }\r\n\r\n    /**\r\n     * 根据名称获取配置项的值（异步）\r\n     * @param key 配置项名称\r\n     * @param defaultValue 默认值\r\n     * @returns 配置项的值\r\n     */\r\n    getValueAsync<V>(key: string, defaultValue?: V) : Promise<V> {\r\n        return GM.getValue(key, defaultValue);\r\n    }\r\n\r\n    /**\r\n     * 设置配置项（异步）\r\n     * @param key 配置项名称\r\n     * @param value 配置项值\r\n     */\r\n    setValueAsync(key: string, value: any) : Promise<void> {\r\n        return GM.setValue(key, value);\r\n    }\r\n\r\n    /**\r\n     * 删除配置项（异步）\r\n     * @param key 配置项名称\r\n     */\r\n    deleteValueAsync(key: string) : Promise<void> {\r\n        return GM.deleteValue(key);\r\n    }\r\n    // #endregion\r\n}","import Logger from \"./Logger\";\r\n\r\nexport default class WebSocketClient {\r\n    logger: Logger = new Logger(\"websocket-client\");\r\n\r\n    url: string = \"ws://127.0.0.1:8080/websocket\";\r\n    connectTimeout: number;\r\n\r\n    connected: boolean;\r\n    webSocket?: WebSocket;\r\n\r\n    constructor(url: string, connectTimeout: number = 3000, connectImmediately: boolean = true) {\r\n        this.url = url;\r\n        this.connectTimeout = connectTimeout;\r\n\r\n        this.connected = false;\r\n        if (connectImmediately) {\r\n            this.createWebSocket();\r\n        }\r\n    }\r\n\r\n    createWebSocket() {\r\n        this.logger.info(\"正在创建WebSocket\");\r\n        let ws = new WebSocket(this.url);\r\n        this.addWebSocketListeners(ws);\r\n        this.logger.info(\"WebSocket创建成功：\", ws);\r\n        this.webSocket = ws;\r\n    }\r\n\r\n    addWebSocketListeners(ws: WebSocket) {\r\n        this.logger.info(\"正在绑定WebSocket事件监听\");\r\n        let self = this;\r\n        ws.onopen = (event) => {\r\n            self.connected = true;\r\n            self.onOpen(event);\r\n        };\r\n        this.logger.debug(\"open事件绑定完成\");\r\n        ws.onmessage = (msgEvent: MessageEvent) => {\r\n            self.onMessage(msgEvent);\r\n        };\r\n        this.logger.debug(\"message事件绑定完成\");\r\n        ws.onclose = (closeEvent: CloseEvent) => {\r\n            self.connected = false;\r\n            self.onClose(closeEvent);\r\n        };\r\n        this.logger.debug(\"close事件绑定完成\");\r\n        ws.onerror = (event: Event) => {\r\n            self.connected = false;\r\n            self.onError(event);\r\n        };\r\n        this.logger.debug(\"error事件绑定完成\");\r\n    }\r\n\r\n    send(req: string) : boolean {\r\n        if (this.webSocket == null) {\r\n            this.logger.error(\"WebSocket未创建\");\r\n            return false;\r\n        }\r\n        if (!this.connected) {\r\n            this.logger.error(\"未连接到WebSocket服务端\");\r\n            return false;\r\n        }\r\n        this.webSocket.send(req);\r\n        return true;\r\n    }\r\n\r\n    waitForOpen() : Promise<number> {\r\n        let self = this;\r\n        return new Promise<number>((resolve, reject) => {\r\n            let startAt: number = (new Date()).valueOf();\r\n            let intervalId = setInterval(() => {\r\n                let duration = (new Date()).valueOf() - startAt;\r\n                if (duration >= this.connectTimeout) {\r\n                    clearInterval(intervalId);\r\n                    reject(`WebSocket服务端${self.url}连接超时`);\r\n                    return;\r\n                }\r\n                if (self.connected) {\r\n                    clearInterval(intervalId);\r\n                    resolve(duration);\r\n                }\r\n            }, 1);\r\n        });\r\n    }\r\n    \r\n    onOpen(event: Event) {\r\n        this.logger.info(\"websocket服务端连接成功: \", event);\r\n    }\r\n\r\n    onMessage(msgEvent: MessageEvent) {\r\n        this.logger.info(\"处理服务端发送报文事件: \", msgEvent);\r\n    }\r\n\r\n    onClose(closeEvent: CloseEvent) {\r\n        this.logger.info(\"与websocket服务端连接断开: \", closeEvent);\r\n    }\r\n\r\n    onError(event: Event) {\r\n        this.logger.info(\"websocket通信发生错误: \", event);\r\n    }\r\n}","export class JsonRpcRequest {\r\n    jsonrpc: string\r\n    method: string\r\n    params: any\r\n    id: string | number | null\r\n    \r\n    constructor(method: string, params: any, id: string | number | null) {\r\n        this.jsonrpc = \"2.0\"\r\n        this.method = method\r\n        this.params = params\r\n        this.id = id\r\n    }\r\n}\r\n\r\nexport class JsonRpcResponse {\r\n    jsonrpc: string\r\n    result?: any\r\n    error?: any\r\n    id: string | number | null\r\n\r\n    constructor(result: any, id: string | number | null) {\r\n        this.jsonrpc = \"2.0\"\r\n        this.result = result\r\n        this.error = null\r\n        this.id = id\r\n    }\r\n}","import WebSocketClient from \"./WebSocketClient\";\r\nimport { \r\n    JsonRpcRequest as Request, \r\n    JsonRpcResponse as Response\r\n} from \"./JsonRpcProtocol\";\r\n\r\nexport default class JsonRpcWebSocketClient extends WebSocketClient {\r\n    msgIdType: string;\r\n    seq: Uint32Array;\r\n\r\n    timeout: number;\r\n    interval: number;\r\n\r\n    requests: Map<string|number, Request>;\r\n    responses: Map<string|number, Response>;\r\n    \r\n    constructor(url: string, msgIdType: string = \"number\", timeout: number = 5000, interval: number = 1) {\r\n        super(url);\r\n        \r\n        this.msgIdType = msgIdType;\r\n        this.timeout = timeout;\r\n        this.interval = interval;\r\n\r\n        this.seq = new Uint32Array(1);\r\n        this.seq[0] = 0;\r\n\r\n        this.requests = new Map<string|number, Request>();\r\n        this.responses = new Map<string|number, Response>();\r\n    }\r\n\r\n    generateMsgId() : string | number {\r\n        if (this.msgIdType == \"string\") {\r\n            return crypto.randomUUID();\r\n        }\r\n        return Atomics.add(this.seq, 0, 1);\r\n    }\r\n\r\n    createRequestAndSend(method: string, params: any[], id?: string | number) {\r\n        if (id == null) id = this.generateMsgId()\r\n        let req = new Request(\r\n            method,\r\n            params,\r\n            id\r\n        );\r\n        this.sendRequest(req);\r\n    }\r\n\r\n    sendRequest(req: Request) {\r\n        if (req.id == null) {\r\n            this.logger.warn(\"无效的JSON-RPC请求报文，缺少id字段: \", req);\r\n            return\r\n        }\r\n\r\n        let json = JSON.stringify(req);\r\n        this.requests.set(req.id, req);\r\n        super.send(json);\r\n    }\r\n\r\n    onMessage(msgEvent: MessageEvent) {\r\n        // super.onMessage(msgEvent);\r\n        let recvMsg = JSON.parse(msgEvent.data);\r\n        if (recvMsg == null) {\r\n            this.logger.warn(`接收到来自${msgEvent.origin}的报文，无法转换为JSON对象：${msgEvent.data}`);\r\n            return;\r\n        }\r\n\r\n        if (recvMsg.jsonrpc == null) {\r\n            this.logger.warn(\"报文中未找到jsonrpc字段\");\r\n            return;\r\n        }\r\n\r\n        if (recvMsg.jsonrpc != \"2.0\") {\r\n            this.logger.warn(\"JSON-RPC版本不为2.0\");\r\n            return;\r\n        }\r\n\r\n        if (recvMsg.method != null) {\r\n            this.handleRequest(recvMsg as Request);\r\n            return;\r\n        }\r\n\r\n        if (recvMsg.id != null) {\r\n            this.handleResponse(recvMsg as Response);\r\n            return;\r\n        }\r\n\r\n        this.logger.warn(\"接收到无法处理的报文：\", recvMsg);\r\n    }\r\n\r\n    handleRequest(req: Request) {\r\n        this.logger.debug(`接收到请求报文：`, req);\r\n    }\r\n\r\n    handleResponse(resp: Response) {\r\n        this.logger.debug(`接收到响应报文：`, resp);\r\n        this.responses.set(resp.id!, resp);\r\n    }\r\n\r\n    waitForResponse(\r\n        msgId: string | number, \r\n        reject: (reason?: any) => void,\r\n        extractRespAndResolve: (resp: Response) => void) : void {\r\n        let startAt = new Date().valueOf();\r\n        let intervalId = setInterval(() => {\r\n            let duration = new Date().valueOf() - startAt;\r\n            if (duration >= this.timeout) {\r\n                clearInterval(intervalId);\r\n                this.logger.error(\"获取响应报文超时\");\r\n                reject(\"获取响应报文超时\");\r\n                return;\r\n            }\r\n\r\n            if (this.responses.has(msgId)) {\r\n                clearInterval(intervalId);\r\n                \r\n                let resp = this.responses.get(msgId);\r\n                if (resp != null && resp.result != null) {\r\n                    this.logger.debug(`获取到请求${msgId}的响应报文，耗时${duration}ms`);\r\n                    extractRespAndResolve(resp);\r\n                    return;\r\n                }\r\n\r\n                this.logger.error(\"抽取响应报文失败: \", resp);\r\n                reject(\"抽取响应报文失败\");\r\n            }\r\n        }, this.interval);\r\n    }\r\n}","import JsonRpcWebSocketClient from \"./JsonRpcWebSocketClient\";\r\n\r\ninterface Aria2ClientOptions {\r\n    url: string,\r\n    msgIdType: string,\r\n    token?: string | null,\r\n    timeout: number,\r\n    interval: number\r\n}\r\n\r\nlet defaultOptions = {\r\n    url: \"ws://127.0.0.1:6800/jsonrpc\",\r\n    msgIdType: \"number\",\r\n    token: null,\r\n    timeout: 30000,\r\n    interval: 10\r\n} as Aria2ClientOptions;\r\n\r\nexport class Aria2Client extends JsonRpcWebSocketClient {\r\n    token?: string | null;\r\n\r\n    constructor(options?: object) {\r\n        let mergedOptions = {...defaultOptions, ...options};\r\n        super(\r\n            mergedOptions.url, \r\n            mergedOptions.msgIdType, \r\n            mergedOptions.timeout, \r\n            mergedOptions.interval\r\n        );\r\n\r\n        this.token = mergedOptions.token;\r\n    }\r\n\r\n    getSecret() : string | null {\r\n        return (this.token != null && this.token.trim() != \"\") ? `token:${this.token}` : null\r\n    }\r\n\r\n    reconnect(url?: string, token?: string) {\r\n        if (url != null) {\r\n            this.url = url;\r\n        }\r\n        if (token != null) {\r\n            this.token = token;\r\n        }\r\n        this.createWebSocket();\r\n    }\r\n\r\n    generateParams() : any[] {\r\n        let params = []\r\n        let secret = this.getSecret()\r\n        if (secret != null) params.push(secret)\r\n        return params\r\n    }\r\n\r\n    getVersion() : Promise<Aria2Version> {\r\n        let method = \"aria2.getVersion\";\r\n\r\n        let params = this.generateParams();\r\n\r\n        let msgId = this.generateMsgId();\r\n        this.createRequestAndSend(method, params, msgId);\r\n\r\n        let self = this;\r\n        return new Promise<Aria2Version>((resolve, reject) => {\r\n            self.waitForResponse(msgId, reject, (resp) => {\r\n                let result = resp.result as Aria2Version;\r\n                resolve(result);\r\n            });\r\n        });\r\n    }\r\n\r\n    addUri(uris: string[], options: object | null = {}, position?: number | null) : Promise<string> {\r\n        let method = \"aria2.addUri\";\r\n\r\n        let params = this.generateParams();\r\n        params.push(uris);\r\n        if (options != null) params.push(options);\r\n        if (position != null) params.push(position);\r\n\r\n        let msgId = this.generateMsgId();\r\n        this.createRequestAndSend(method, params, msgId);\r\n\r\n        let self = this;\r\n        return new Promise<string>((resolve, reject) => {\r\n            self.waitForResponse(msgId, reject, (resp) => {\r\n                let result = resp.result.gid as string;\r\n                resolve(result);\r\n            });\r\n        });\r\n    }\r\n\r\n    tellStatus(gid: string, keys: string[] | null = [\"gid\", \"status\", \"totalLength\", \"completedLength\"]) : Promise<Aria2TaskStatus> {\r\n        let method = \"aria2.tellStatus\";\r\n        \r\n        let params = this.generateParams();\r\n        params.push(gid);\r\n        if (keys != null) params.push(keys);\r\n        \r\n        let msgId = this.generateMsgId();\r\n        this.createRequestAndSend(method, params);\r\n\r\n        let self = this;\r\n        return new Promise<Aria2TaskStatus>((resolve, reject) => {\r\n            self.waitForResponse(msgId, reject, (resp) => {\r\n                let result = resp.result as Aria2TaskStatus;\r\n                resolve(result);\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\nexport interface Aria2Version {\r\n    enabledFeatures: string[];\r\n    version: string;\r\n}\r\n\r\nexport interface Aria2TaskStatus {\r\n    gid?: string;\r\n    status?: string;\r\n    totalLength?: number;\r\n    completedLength?: number;\r\n}","import Logger from \"./Logger\";\r\n\r\nexport default class DynamicInjector {\r\n    logger: Logger;\r\n    cdn: string = \"https://cdn.jsdelivr.net/npm/\";\r\n    timeout: number = 5000;\r\n    checkInterval: number = 1;\r\n\r\n    constructor(cdn?: string, timeout?: number, checkInterval?: number) {\r\n        this.logger = new Logger(\"dynamic-injector\");\r\n        if (cdn != null) this.cdn = cdn;\r\n        if (timeout != null) this.timeout = timeout;\r\n        if (checkInterval != null) this.checkInterval = checkInterval;\r\n    }\r\n\r\n    getExtName(urlStr: string) {\r\n        let url = new URL(urlStr);\r\n        let index = url.pathname.lastIndexOf(\".\");\r\n        let extName = url.pathname.substring(index);\r\n        return extName;\r\n    }\r\n\r\n    injectByUrl<T>(url: string, timeout: number, checkLoaded?: (payload?: any) => T|null) : Promise<T> {\r\n        let extName = this.getExtName(url);\r\n        if (extName == \".js\") {\r\n            let element = document.createElement(\"script\");\r\n            element.type = \"application/javascript\";\r\n            element.src = url;\r\n            document.body.appendChild(element);\r\n            this.logger.info(`开始注入js: ${url}`);\r\n        }\r\n        else if (extName == \".css\") {\r\n            let element = document.createElement(\"link\");\r\n            element.rel = \"stylesheet\";\r\n            element.href = url;\r\n            document.head.appendChild(element);\r\n            this.logger.info(`开始注入css: ${url}`);\r\n        }\r\n        else {\r\n            this.logger.info(`无法注入元素的文件类型: ${extName}`);\r\n        }\r\n\r\n        return new Promise(((resolve: (value: T|PromiseLike<T>) => void, reject: (reason?: any) => void) => {\r\n            if (checkLoaded == null) return;\r\n\r\n            let startAt = (new Date()).valueOf();\r\n            let intervalId = setInterval(() => {\r\n                let duration = (new Date()).valueOf() - startAt;\r\n                if (duration >= timeout) {\r\n                    clearInterval(intervalId);\r\n                    reject(`${url}加载超时`);\r\n                    return;\r\n                }\r\n\r\n                let loaded = checkLoaded(duration);\r\n                if (loaded != null) {\r\n                    clearInterval(intervalId);\r\n                    resolve(loaded);\r\n                    return;\r\n                }\r\n\r\n            }, this.checkInterval);\r\n        }));\r\n    }\r\n\r\n    injectFromCDN<T>(cdn: string, pkg: string, version: string, path: string, timeout: number, checkLoaded?: (payload?: any) => T|null) : Promise<T> {\r\n        // https://cdn.jsdelivr.net/npm/vue@3.2/dist/vue.global.prod.js\r\n        let url = `${cdn}${pkg}@${version}${path}`;\r\n        return this.injectByUrl(url, timeout, checkLoaded);\r\n    }\r\n\r\n    inject<T>(pkg: string, version: string, path: string, checkLoaded?: (payload?: any) => T|null) : Promise<T> {\r\n        return this.injectFromCDN(this.cdn, pkg, version, path, this.timeout, checkLoaded);\r\n    }\r\n}","import DynamicInjector from './DynamicInjector';\r\nimport Logger from './Logger';\r\n\r\ninterface VueAppLoaderOptions {\r\n    mountPointId: string;\r\n    html: string | null;\r\n    styles: string | null;\r\n    vueVersion: string | null;\r\n    elementVersion: string | null;\r\n    vueOptions: object | null;\r\n    provides: object | null;\r\n    plugins: object[]\r\n}\r\n\r\nlet defaultOptions = {\r\n    mountPointId: \"app\",\r\n    html: null,\r\n    styles: \"\",\r\n    vueVersion: \"3.2\",\r\n    elementVersion: \"2.3\",\r\n    vueOptions: {},\r\n    provides: {},\r\n    plugins: []\r\n} as VueAppLoaderOptions;\r\n\r\nexport default class VueAppLoader {\r\n    logger: Logger;\r\n    injector: DynamicInjector;\r\n    options: VueAppLoaderOptions;\r\n\r\n    constructor(options: object) {\r\n        this.logger = new Logger(\"vue-app-loader\");\r\n        this.injector = new DynamicInjector();\r\n        this.options = { ...defaultOptions, ...options };\r\n    }\r\n    \r\n    async load(opts?: object) {\r\n        // step 0 重建options\r\n        let options = (opts != null) ?\r\n            { ...defaultOptions, ...opts } :\r\n            this.options;\r\n\r\n        // step 1 注入html\r\n        let appNode = document.createElement(\"div\");\r\n        if (options.html != null && options.html.trim().length > 0) {\r\n            appNode.outerHTML = options.html.trim();\r\n        }\r\n        else {\r\n            appNode.id = options.mountPointId;\r\n        }\r\n        document.body.appendChild(appNode);\r\n\r\n        // step 2 注入css\r\n        if (options.styles != null) {\r\n            GM_addStyle(options.styles);\r\n        }\r\n\r\n        do {\r\n            if (options.vueVersion == null) break;\r\n\r\n            // step 3 引入vue\r\n            let vue = await this.injector.inject(\"vue\", options.vueVersion, \"/dist/vue.global.js\", (duration) => {\r\n                // @ts-ignore\r\n                if (typeof Vue != 'undefined') {\r\n                    // @ts-ignore\r\n                    let vue = Vue;\r\n                    this.logger.info(`Vue ${vue.version} 加载完成，耗时 ${duration} ms`);\r\n                    return vue;\r\n                }\r\n                return null;\r\n            });\r\n            if (vue == null) break;\r\n\r\n            // step 4 引入vue插件\r\n            if (options.elementVersion == null) break;\r\n            let element = await this.injector.inject(\"element-plus\", options.elementVersion, \"/dist/index.full.js\", (duration) => {\r\n                // @ts-ignore\r\n                if (typeof ElementPlus != 'undefined') {\r\n                    // @ts-ignore\r\n                    let element = ElementPlus;\r\n                    this.logger.info(`Element Plus ${element.version} 加载完成，耗时 ${duration} ms`);\r\n                    return element;\r\n                }\r\n                return null;\r\n            });\r\n            this.injector.inject(\"element-plus\", options.elementVersion, \"/dist/index.css\");\r\n\r\n            // step 5 创建vueApp\r\n            let app = vue.createApp(options.vueOptions);\r\n            if (element != null) {\r\n                app.use(element);\r\n                // @ts-ignore\r\n                app.provide(\"$message\", element.ElMessage);\r\n            }\r\n\r\n            // step 6 加入plugins\r\n            for (let plugin of options.plugins) {\r\n                app.use(plugin)\r\n            }\r\n\r\n            // step 7 加入provide\r\n            for (let key in options.provides) {\r\n                if (key.startsWith(\"$\")) {\r\n                    // @ts-ignore\r\n                    let provide = options.provides[key];\r\n                    this.logger.info(\"正在注入provide：%s = \", key, provide);\r\n                    app.provide(key, provide);\r\n                }\r\n            }\r\n\r\n            // step 8 挂载\r\n            app.mount(`#${options.mountPointId}`);\r\n\r\n            return app;\r\n        }\r\n        while (false);\r\n    }\r\n}"],"names":["Logger","name","__publicField","msg","params","logFunc","level","format","Config","useLocalStorage","keys","i","key","defaultValue","json","v","value","initValue","WebSocketClient","url","connectTimeout","connectImmediately","ws","self","event","msgEvent","closeEvent","req","resolve","reject","startAt","intervalId","duration","JsonRpcRequest","method","id","JsonRpcWebSocketClient","msgIdType","timeout","interval","Request","recvMsg","resp","msgId","extractRespAndResolve","defaultOptions","Aria2Client","options","mergedOptions","token","secret","result","uris","position","gid","DynamicInjector","cdn","checkInterval","urlStr","index","checkLoaded","extName","element","loaded","pkg","version","path","VueAppLoader","opts","appNode","vue","app","plugin","provide"],"mappings":"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"}